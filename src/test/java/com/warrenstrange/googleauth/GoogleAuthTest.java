package com.warrenstrange.googleauth;


import org.junit.Test;

import java.util.List;

/**
 * Not really a unit test, but it shows the basic usage of this package.
 * To properly test the authenticator, manual intervention and multiple steps
 * are required:
 * <ol>
 * <li>Run the test in order to generate the required information for a
 * Google Authenticator application to be configured.</li>
 * <li>Set the <code>savedSecret</code> field with the value generated by the
 * <code>GoogleAuthTest#genSecretTest</code> method.</li>
 * <li>Generate the current code with the Google Authenticator application and
 * set the <code>currentCode</code> accordingly.</li>
 * <li>Check that the <code>#authTest</code> method correctly validates the
 * data when invoking the <code>GoogleAuthenticator#authorize</code> method.
 * </li>
 * </ol>
 */
public class GoogleAuthTest {

    // Change this to the saved secret from the running the above test.
    private static String savedSecret = "CBN54QPAB5LMWMQO";
    private static int currentCode = 808259;

    @Test
    public void genSecretTest() {
        GoogleAuthenticator googleAuthenticator = new GoogleAuthenticator();

        final GoogleAuthenticatorKey key =
                googleAuthenticator.createCredentials();
        final String secret = key.getKey();
        final List<Integer> scratchCodes = key.getScratchCodes();

        String url = GoogleAuthenticatorKey.getQRBarcodeURL(
                "testuser", "testhost", secret);

        System.out.println("Please register " + url);
        System.out.println("Secret key is " + secret);

        for (Integer i : scratchCodes) {
            if (!googleAuthenticator.validateScratchCode(i)) {
                throw new IllegalArgumentException("An invalid code has been " +
                        "generated: this is an application bug.");
            }
            System.out.println("Scratch code: " + i);
        }
    }

    @Test
    public void authTest() {
        GoogleAuthenticator ga = new GoogleAuthenticator();
        ga.setWindowSize(5);  //should give 5 * 30 seconds of grace...

        boolean r = ga.authorize(savedSecret, currentCode);

        System.out.println("Check currentCode = " + r);
    }


}
